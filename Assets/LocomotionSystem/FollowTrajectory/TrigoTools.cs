//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace devUnity
{
	public class TrigoTools
	{
		/** Math methods **/
		static public float getPi()
		{
			return Mathf.PI;
		}
			
		static public float getPiInDegree()
		{
			return RadianToDegree(Mathf.PI);
		}
			
		static public float RadianToDegree(float radian)
		{
			return 180.0f * radian / getPi(); 
		}
			
		static public float DegreeToRadian(float degree)
		{
			return getPi() * degree / 180.0f; 
		}
			
		static public float getAngleInTrigoRad(float angle)
		{
			float returnVal = angle;

			// si trop proche de 0 : approximation des doubles
			returnVal = (Mathf.Sqrt(returnVal*returnVal)<0.0001) ? 0.0f : returnVal; // € [0,2pi]

			// si >2pi ou <-2pi
			while (returnVal>2*getPi())
			{
				returnVal -= 2*getPi();
			}
			while (returnVal<-2*getPi())
			{
				returnVal += 2*getPi();
			}		
			if(returnVal<0)
				returnVal = 2*getPi()+returnVal;
			return returnVal;
		}
	}
}

